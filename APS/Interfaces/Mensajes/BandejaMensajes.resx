<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>